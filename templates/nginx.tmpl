worker_processes {{ worker_processes }};
pid /tmp/nginx.pid;

error_log /tmp/nginx_error.log;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

    # Set an array of temp and cache file options that will otherwise default to
    # restricted locations accessible only to root.
    client_body_temp_path /tmp/client_body;
    fastcgi_temp_path /tmp/fastcgi_temp;
    proxy_temp_path /tmp/proxy_temp;
    scgi_temp_path /tmp/scgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

    upstream tryton_hosts {
        least_conn;
    {% for server in servers %}
        server {{ server.host }}:{{ server.port }};
    {% endfor %}
        keepalive 7;
    }

    server {
        listen {{ port }}{{ ' ssl' if certificate != None }};
        listen [::]:{{ port }} ipv6only=on{{ ' ssl' if certificate != None }};

        server_name {{ server_name }};

        {{ certificate if certificate != None }}
        {{ privatekey if privatekey != None }}

        charset utf-8;

        location / {
            proxy_pass https://tryton_hosts;
        }
    }

	##
	# Logging Settings
	##

    log_format main '$remote_addr - $remote_user [$time_local] $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - '
        '$server_name to: $upstream_addr: $request upstream_response_time '
        '$upstream_response_time msec $msec request_time $request_time';

    access_log /tmp/nginx_access.log;
    error_log /tmp/nginx_error.log;
}
